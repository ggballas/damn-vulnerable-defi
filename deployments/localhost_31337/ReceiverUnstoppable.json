{"metadata":"{\"defaultCompiler\":{\"version\":\"0.8.7\"},\"sources\":{\"contracts/unstoppable/ReceiverUnstoppable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../unstoppable/UnstoppableLender.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\n\\n/**\\n * @title ReceiverUnstoppable\\n * @author Damn Vulnerable DeFi (https://damnvulnerabledefi.xyz)\\n */\\ncontract ReceiverUnstoppable {\\n\\n    UnstoppableLender private immutable pool;\\n    address private immutable owner;\\n\\n    constructor(address poolAddress) {\\n        pool = UnstoppableLender(poolAddress);\\n        owner = msg.sender;\\n    }\\n\\n    // Pool will call this function during the flash loan\\n    function receiveTokens(address tokenAddress, uint256 amount) external {\\n        require(msg.sender == address(pool), \\\"Sender must be pool\\\");\\n        // Return all tokens to the pool\\n        require(IERC20(tokenAddress).transfer(msg.sender, amount), \\\"Transfer of tokens failed\\\");\\n    }\\n\\n    function executeFlashLoan(uint256 amount) external {\\n        require(msg.sender == owner, \\\"Only owner can execute flash loan\\\");\\n        pool.flashLoan(amount);\\n    }\\n}\",\"versionPragma\":\"^0.8.0\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address sender,\\n        address recipient,\\n        uint256 amount\\n    ) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"versionPragma\":\"^0.8.0\"},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Contract module that helps prevent reentrant calls to a function.\\n *\\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\\n * available, which can be applied to functions to make sure there are no nested\\n * (reentrant) calls to them.\\n *\\n * Note that because there is a single `nonReentrant` guard, functions marked as\\n * `nonReentrant` may not call one another. This can be worked around by making\\n * those functions `private`, and then adding `external` `nonReentrant` entry\\n * points to them.\\n *\\n * TIP: If you would like to learn more about reentrancy and alternative ways\\n * to protect against it, check out our blog post\\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\\n */\\nabstract contract ReentrancyGuard {\\n    // Booleans are more expensive than uint256 or any type that takes up a full\\n    // word because each write operation emits an extra SLOAD to first read the\\n    // slot's contents, replace the bits taken up by the boolean, and then write\\n    // back. This is the compiler's defense against contract upgrades and\\n    // pointer aliasing, and it cannot be disabled.\\n\\n    // The values being non-zero value makes deployment a bit more expensive,\\n    // but in exchange the refund on every call to nonReentrant will be lower in\\n    // amount. Since refunds are capped to a percentage of the total\\n    // transaction's gas, it is best to keep them low in cases like this one, to\\n    // increase the likelihood of the full refund coming into effect.\\n    uint256 private constant _NOT_ENTERED = 1;\\n    uint256 private constant _ENTERED = 2;\\n\\n    uint256 private _status;\\n\\n    constructor() {\\n        _status = _NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\n     * function is not supported. It is possible to prevent this from happening\\n     * by making the `nonReentrant` function external, and make it call a\\n     * `private` function that does the actual work.\\n     */\\n    modifier nonReentrant() {\\n        // On the first call to nonReentrant, _notEntered will be true\\n        require(_status != _ENTERED, \\\"ReentrancyGuard: reentrant call\\\");\\n\\n        // Any calls to nonReentrant after this point will fail\\n        _status = _ENTERED;\\n\\n        _;\\n\\n        // By storing the original value once again, a refund is triggered (see\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\n        _status = _NOT_ENTERED;\\n    }\\n}\\n\",\"versionPragma\":\"^0.8.0\"},\"contracts/unstoppable/UnstoppableLender.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/security/ReentrancyGuard.sol\\\";\\n\\ninterface IReceiver {\\n    function receiveTokens(address tokenAddress, uint256 amount) external;\\n}\\n\\n/**\\n * @title UnstoppableLender\\n * @author Damn Vulnerable DeFi (https://damnvulnerabledefi.xyz)\\n */\\ncontract UnstoppableLender is ReentrancyGuard {\\n\\n    IERC20 public immutable damnValuableToken;\\n    uint256 public poolBalance;\\n\\n    constructor(address tokenAddress) {\\n        require(tokenAddress != address(0), \\\"Token address cannot be zero\\\");\\n        damnValuableToken = IERC20(tokenAddress);\\n    }\\n\\n    function depositTokens(uint256 amount) external nonReentrant {\\n        require(amount > 0, \\\"Must deposit at least one token\\\");\\n        // Transfer token from sender. Sender must have first approved them.\\n        damnValuableToken.transferFrom(msg.sender, address(this), amount);\\n        poolBalance = poolBalance + amount;\\n    }\\n\\n    function flashLoan(uint256 borrowAmount) external nonReentrant {\\n        require(borrowAmount > 0, \\\"Must borrow at least one token\\\");\\n\\n        uint256 balanceBefore = damnValuableToken.balanceOf(address(this));\\n        require(balanceBefore >= borrowAmount, \\\"Not enough tokens in pool\\\");\\n\\n        // Ensured by the protocol via the `depositTokens` function\\n        assert(poolBalance == balanceBefore);\\n        \\n        damnValuableToken.transfer(msg.sender, borrowAmount);\\n        \\n        IReceiver(msg.sender).receiveTokens(address(damnValuableToken), borrowAmount);\\n        \\n        uint256 balanceAfter = damnValuableToken.balanceOf(address(this));\\n        require(balanceAfter >= balanceBefore, \\\"Flash loan hasn't been paid back\\\");\\n    }\\n}\\n\",\"versionPragma\":\"^0.8.0\"}}}","address":"0xBC9129Dc0487fc2E169941C75aABC539f208fb01","bytecode":"0x60c060405234801561001057600080fd5b506040516107d23803806107d2833981810160405281019061003291906100bb565b8073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b815250503373ffffffffffffffffffffffffffffffffffffffff1660a08173ffffffffffffffffffffffffffffffffffffffff1660601b8152505050610136565b6000815190506100b58161011f565b92915050565b6000602082840312156100d1576100d061011a565b5b60006100df848285016100a6565b91505092915050565b60006100f3826100fa565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600080fd5b610128816100e8565b811461013357600080fd5b50565b60805160601c60a05160601c61066b61016760003960006101d301526000818160750152610261015261066b6000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c8063357291301461003b578063fb056f6814610057575b600080fd5b6100556004803603810190610050919061032c565b610073565b005b610071600480360381019061006c9190610399565b6101d1565b005b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610101576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100f8906104b6565b60405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b815260040161013c92919061044d565b602060405180830381600087803b15801561015657600080fd5b505af115801561016a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061018e919061036c565b6101cd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101c490610496565b60405180910390fd5b5050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461025f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161025690610476565b60405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16639ab603b9826040518263ffffffff1660e01b81526004016102b891906104d6565b600060405180830381600087803b1580156102d257600080fd5b505af11580156102e6573d6000803e3d6000fd5b5050505050565b6000813590506102fc816105f0565b92915050565b60008151905061031181610607565b92915050565b6000813590506103268161061e565b92915050565b600080604083850312156103435761034261054a565b5b6000610351858286016102ed565b925050602061036285828601610317565b9150509250929050565b6000602082840312156103825761038161054a565b5b600061039084828501610302565b91505092915050565b6000602082840312156103af576103ae61054a565b5b60006103bd84828501610317565b91505092915050565b6103cf81610502565b82525050565b60006103e26021836104f1565b91506103ed8261054f565b604082019050919050565b60006104056019836104f1565b91506104108261059e565b602082019050919050565b60006104286013836104f1565b9150610433826105c7565b602082019050919050565b61044781610540565b82525050565b600060408201905061046260008301856103c6565b61046f602083018461043e565b9392505050565b6000602082019050818103600083015261048f816103d5565b9050919050565b600060208201905081810360008301526104af816103f8565b9050919050565b600060208201905081810360008301526104cf8161041b565b9050919050565b60006020820190506104eb600083018461043e565b92915050565b600082825260208201905092915050565b600061050d82610520565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600080fd5b7f4f6e6c79206f776e65722063616e206578656375746520666c617368206c6f6160008201527f6e00000000000000000000000000000000000000000000000000000000000000602082015250565b7f5472616e73666572206f6620746f6b656e73206661696c656400000000000000600082015250565b7f53656e646572206d75737420626520706f6f6c00000000000000000000000000600082015250565b6105f981610502565b811461060457600080fd5b50565b61061081610514565b811461061b57600080fd5b50565b61062781610540565b811461063257600080fd5b5056fea264697066735822122005eac21f1f4115fc912dec923f39635897e400155044812f223a057a7d9e91ac64736f6c63430008070033","deployedBytecode":"0x608060405234801561001057600080fd5b50600436106100365760003560e01c8063357291301461003b578063fb056f6814610057575b600080fd5b6100556004803603810190610050919061032c565b610073565b005b610071600480360381019061006c9190610399565b6101d1565b005b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610101576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100f8906104b6565b60405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b815260040161013c92919061044d565b602060405180830381600087803b15801561015657600080fd5b505af115801561016a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061018e919061036c565b6101cd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101c490610496565b60405180910390fd5b5050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461025f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161025690610476565b60405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16639ab603b9826040518263ffffffff1660e01b81526004016102b891906104d6565b600060405180830381600087803b1580156102d257600080fd5b505af11580156102e6573d6000803e3d6000fd5b5050505050565b6000813590506102fc816105f0565b92915050565b60008151905061031181610607565b92915050565b6000813590506103268161061e565b92915050565b600080604083850312156103435761034261054a565b5b6000610351858286016102ed565b925050602061036285828601610317565b9150509250929050565b6000602082840312156103825761038161054a565b5b600061039084828501610302565b91505092915050565b6000602082840312156103af576103ae61054a565b5b60006103bd84828501610317565b91505092915050565b6103cf81610502565b82525050565b60006103e26021836104f1565b91506103ed8261054f565b604082019050919050565b60006104056019836104f1565b91506104108261059e565b602082019050919050565b60006104286013836104f1565b9150610433826105c7565b602082019050919050565b61044781610540565b82525050565b600060408201905061046260008301856103c6565b61046f602083018461043e565b9392505050565b6000602082019050818103600083015261048f816103d5565b9050919050565b600060208201905081810360008301526104af816103f8565b9050919050565b600060208201905081810360008301526104cf8161041b565b9050919050565b60006020820190506104eb600083018461043e565b92915050565b600082825260208201905092915050565b600061050d82610520565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600080fd5b7f4f6e6c79206f776e65722063616e206578656375746520666c617368206c6f6160008201527f6e00000000000000000000000000000000000000000000000000000000000000602082015250565b7f5472616e73666572206f6620746f6b656e73206661696c656400000000000000600082015250565b7f53656e646572206d75737420626520706f6f6c00000000000000000000000000600082015250565b6105f981610502565b811461060457600080fd5b50565b61061081610514565b811461061b57600080fd5b50565b61062781610540565b811461063257600080fd5b5056fea264697066735822122005eac21f1f4115fc912dec923f39635897e400155044812f223a057a7d9e91ac64736f6c63430008070033","abi":[{"inputs":[{"internalType":"address","name":"poolAddress","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"executeFlashLoan","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"tokenAddress","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"receiveTokens","outputs":[],"stateMutability":"nonpayable","type":"function"}]}